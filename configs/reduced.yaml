config:
  name: reduced
  seed: 42
  device: cuda
  num_workers: 0
  root_dir: ./ # project root dir
  dataset_dir: ./dataset/cylinder_vonkarman/Re200_cut/flow # dataset dir
  split_dir: ./dataset/cylinder_vonkarman/Re200_cut/flow_split # split dir
  output_dir: ./output/ # output dir
  mesh_file: D:\TA\TA2\GAE-ROM\dataset\cylinder_vonkarman\Re200_cut\cylinder_D04
  variable: velocity # ['VELOCITY-X', 'VELOCITY-Y'] # based on SU2 output docs
  data_sample: 20 # number of data samples to use for training

model:
  encoder:
    convolution_layers:
      type: ChebConv # [GMMConv, ChebConv, GCNConv, GATConv] so far chebconv is the only one that works
      hidden_channels: [64, 64, 16]
      act: relu
      dropout: 0.1 # probability
      kernel_size: 5
      K: 5
      dim: 2 # input channels (velocity x,y)
    pool:
      is_pooling: true
      type: EdgePool
      in_channels: 64
      ratio: 0.3
      dropout: 0.1
    ffn: [64, 64, 25]  # Reduced from [128, 128, 25]
    act: relu
    conv: GMMConv
    dim: 64

  autoencoder:
    encoder_layers: [2048, 1024, 256, 64, 16]
    decoder_layers: [16, 64, 256, 1024, 2048]
    latent_dim: 2
    act: relu
    dropout: 0.1 # probability

  decoder:
    convolution_layers:
      type: ChebConv # [GMMConv, ChebConv, GCNConv, GATConv]
      hidden_channels: [16, 64, 64]
      act: relu
      dropout: 0.1 # probability
      kernel_size: 5
      K: 5
      dim: 2 # input channels (velocity x,y)
    unpool:
      is_unpooling: true
      type: EdgePool
      in_channels: 64
      ratio: 0.4
      dropout: 0.1
    act: relu
    conv: GMMConv
    dim: 1
    graph_pooling: TopKPooling


training:
  epochs: 100
  batch_size: 1
  print_train: 10
  amp: true
  optimizer:
    type: Adam # [Adam, AdamW]
    learning_rate: 0.001
    weight_decay: 0.0001

  scheduler:
    type: StepLR # [StepLR, CosineAnnealingLR]
    step_size: 10
    gamma: 0.1

  early_stopping:
    early_stopping: 10
    patience: 10

  loss:
    loss: RMSE # [MSELoss, RMSE]

  metric:
    metric: RMSE # [MSE, RMSE]


